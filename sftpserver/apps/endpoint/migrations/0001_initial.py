# Generated by Django 2.1.4 on 2018-12-08 03:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sftpserver.apps.endpoint.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorizedKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('key_type', models.CharField(max_length=32)),
                ('key', models.CharField(max_length=512)),
                ('comment', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(blank=True, max_length=40, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('merge_commit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='merge_destinations', to='endpoint.Commit')),
                ('parent_commit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='endpoint.Commit')),
            ],
        ),
        migrations.CreateModel(
            name='CommitItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=1024)),
                ('key', models.CharField(blank=True, max_length=40, null=True)),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='endpoint.Commit')),
            ],
            bases=(sftpserver.apps.endpoint.models.MetaFileMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, unique=True)),
                ('parent_key', models.CharField(blank=True, max_length=40, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('data', models.BinaryField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=4096)),
                ('filename', models.CharField(max_length=1024)),
                ('key', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='endpoint.MetaFile')),
            ],
            bases=(sftpserver.apps.endpoint.models.MetaFileMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Root',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('branch', models.CharField(blank=True, max_length=256, null=True)),
                ('base_commit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='endpoint.Commit')),
                ('groups', models.ManyToManyField(blank=True, to='auth.Group')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StorageAccessInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('storage_class', models.CharField(blank=True, max_length=256, null=True)),
                ('args', models.TextField(blank=True, null=True)),
                ('kwargs', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, to='auth.Group')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='metafile',
            name='root',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='endpoint.Root'),
        ),
        migrations.AddField(
            model_name='commit',
            name='root',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='endpoint.Root'),
        ),
        migrations.AlterUniqueTogether(
            name='root',
            unique_together={('name', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='metafile',
            unique_together={('root', 'path')},
        ),
        migrations.AlterUniqueTogether(
            name='commititem',
            unique_together={('commit', 'path')},
        ),
        migrations.AlterUniqueTogether(
            name='authorizedkey',
            unique_together={('user', 'name')},
        ),
    ]
